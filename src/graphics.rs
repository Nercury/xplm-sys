/* automatically generated by rust-bindgen */

pub type Enum_Unnamed1 = ::libc::c_uint;
pub const xplm_Tex_GeneralInterface: ::libc::c_uint = 0;
pub const xplm_Tex_AircraftPaint: ::libc::c_uint = 1;
pub const xplm_Tex_AircraftLiteMap: ::libc::c_uint = 2;
pub type XPLMTextureID = ::libc::c_int;
pub type Enum_Unnamed2 = ::libc::c_uint;
pub const xplmFont_Basic: ::libc::c_uint = 0;
pub const xplmFont_Menus: ::libc::c_uint = 1;
pub const xplmFont_Metal: ::libc::c_uint = 2;
pub const xplmFont_Led: ::libc::c_uint = 3;
pub const xplmFont_LedWide: ::libc::c_uint = 4;
pub const xplmFont_PanelHUD: ::libc::c_uint = 5;
pub const xplmFont_PanelEFIS: ::libc::c_uint = 6;
pub const xplmFont_PanelGPS: ::libc::c_uint = 7;
pub const xplmFont_RadiosGA: ::libc::c_uint = 8;
pub const xplmFont_RadiosBC: ::libc::c_uint = 9;
pub const xplmFont_RadiosHM: ::libc::c_uint = 10;
pub const xplmFont_RadiosGANarrow: ::libc::c_uint = 11;
pub const xplmFont_RadiosBCNarrow: ::libc::c_uint = 12;
pub const xplmFont_RadiosHMNarrow: ::libc::c_uint = 13;
pub const xplmFont_Timer: ::libc::c_uint = 14;
pub const xplmFont_FullRound: ::libc::c_uint = 15;
pub const xplmFont_SmallRound: ::libc::c_uint = 16;
pub const xplmFont_Menus_Localized: ::libc::c_uint = 17;
pub const xplmFont_Proportional: ::libc::c_uint = 18;
pub type XPLMFontID = ::libc::c_int;
extern "C" {
    pub fn XPLMSetGraphicsState(inEnableFog: ::libc::c_int,
                                inNumberTexUnits: ::libc::c_int,
                                inEnableLighting: ::libc::c_int,
                                inEnableAlphaTesting: ::libc::c_int,
                                inEnableAlphaBlending: ::libc::c_int,
                                inEnableDepthTesting: ::libc::c_int,
                                inEnableDepthWriting: ::libc::c_int) -> ();
    pub fn XPLMBindTexture2d(inTextureNum: ::libc::c_int,
                             inTextureUnit: ::libc::c_int) -> ();
    pub fn XPLMGenerateTextureNumbers(outTextureIDs: *mut ::libc::c_int,
                                      inCount: ::libc::c_int) -> ();
    pub fn XPLMGetTexture(inTexture: XPLMTextureID) -> ::libc::c_int;
    pub fn XPLMWorldToLocal(inLatitude: ::libc::c_double,
                            inLongitude: ::libc::c_double,
                            inAltitude: ::libc::c_double,
                            outX: *mut ::libc::c_double,
                            outY: *mut ::libc::c_double,
                            outZ: *mut ::libc::c_double) -> ();
    pub fn XPLMLocalToWorld(inX: ::libc::c_double, inY: ::libc::c_double,
                            inZ: ::libc::c_double,
                            outLatitude: *mut ::libc::c_double,
                            outLongitude: *mut ::libc::c_double,
                            outAltitude: *mut ::libc::c_double) -> ();
    pub fn XPLMDrawTranslucentDarkBox(inLeft: ::libc::c_int,
                                      inTop: ::libc::c_int,
                                      inRight: ::libc::c_int,
                                      inBottom: ::libc::c_int) -> ();
    pub fn XPLMDrawString(inColorRGB: *mut ::libc::c_float,
                          inXOffset: ::libc::c_int, inYOffset: ::libc::c_int,
                          inChar: *mut ::libc::c_char,
                          inWordWrapWidth: *mut ::libc::c_int,
                          inFontID: XPLMFontID) -> ();
    pub fn XPLMDrawNumber(inColorRGB: *mut ::libc::c_float,
                          inXOffset: ::libc::c_int, inYOffset: ::libc::c_int,
                          inValue: ::libc::c_double, inDigits: ::libc::c_int,
                          inDecimals: ::libc::c_int,
                          inShowSign: ::libc::c_int, inFontID: XPLMFontID)
     -> ();
    pub fn XPLMGetFontDimensions(inFontID: XPLMFontID,
                                 outCharWidth: *mut ::libc::c_int,
                                 outCharHeight: *mut ::libc::c_int,
                                 outDigitsOnly: *mut ::libc::c_int) -> ();
    pub fn XPLMMeasureString(inFontID: XPLMFontID,
                             inChar: *const ::libc::c_char,
                             inNumChars: ::libc::c_int) -> ::libc::c_float;
}
