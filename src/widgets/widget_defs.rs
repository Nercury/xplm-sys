/* automatically generated by rust-bindgen */

use super::super::defs::XPLMKeyFlags;

pub type XPWidgetID = *mut ::std::os::raw::c_void;
#[derive(Copy, Clone)]
#[repr(u32)]
pub enum XPWidgetPropertyID {
    xpProperty_Refcon = 0,
    xpProperty_Dragging = 1,
    xpProperty_DragXOff = 2,
    xpProperty_DragYOff = 3,
    xpProperty_Hilited = 4,
    xpProperty_Object = 5,
    xpProperty_Clip = 6,
    xpProperty_Enabled = 7,
    xpProperty_UserStart = 10000,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct XPMouseState_t {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub button: ::std::os::raw::c_int,
    pub delta: ::std::os::raw::c_int,
}
impl ::std::default::Default for XPMouseState_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct XPKeyState_t {
    pub key: ::std::os::raw::c_char,
    pub flags: XPLMKeyFlags,
    pub vkey: ::std::os::raw::c_char,
}
impl ::std::default::Default for XPKeyState_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct XPWidgetGeometryChange_t {
    pub dx: ::std::os::raw::c_int,
    pub dy: ::std::os::raw::c_int,
    pub dwidth: ::std::os::raw::c_int,
    pub dheight: ::std::os::raw::c_int,
}
impl ::std::default::Default for XPWidgetGeometryChange_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
pub enum Enum_Unnamed5 {
    xpMode_Direct = 0,
    xpMode_UpChain = 1,
    xpMode_Recursive = 2,
    xpMode_DirectAllCallbacks = 3,
    xpMode_Once = 4,
}
pub type XPDispatchMode = ::std::os::raw::c_int;
pub type XPWidgetClass = ::std::os::raw::c_int;
#[derive(Copy, Clone)]
#[repr(u32)]
pub enum Enum_Unnamed6 {
    xpMsg_None = 0,
    xpMsg_Create = 1,
    xpMsg_Destroy = 2,
    xpMsg_Paint = 3,
    xpMsg_Draw = 4,
    xpMsg_KeyPress = 5,
    xpMsg_KeyTakeFocus = 6,
    xpMsg_KeyLoseFocus = 7,
    xpMsg_MouseDown = 8,
    xpMsg_MouseDrag = 9,
    xpMsg_MouseUp = 10,
    xpMsg_Reshape = 11,
    xpMsg_ExposedChanged = 12,
    xpMsg_AcceptChild = 13,
    xpMsg_LoseChild = 14,
    xpMsg_AcceptParent = 15,
    xpMsg_Shown = 16,
    xpMsg_Hidden = 17,
    xpMsg_DescriptorChanged = 18,
    xpMsg_PropertyChanged = 19,
    xpMsg_MouseWheel = 20,
    xpMsg_CursorAdjust = 21,
    xpMsg_UserStart = 10000,
}
pub type XPWidgetMessage = ::std::os::raw::c_int;
pub type XPWidgetFunc_t =
    ::std::option::Option<extern "C" fn(inMessage: XPWidgetMessage,
                                        inWidget: XPWidgetID,
                                        inParam1: isize,
                                        inParam2: isize)
                              -> ::std::os::raw::c_int>;
