/* automatically generated by rust-bindgen */

#[derive(Copy, Clone)]
#[repr(u32)]
pub enum Enum_Unnamed1 {
    xplm_ControlCameraUntilViewChanges = 1,
    xplm_ControlCameraForever = 2,
}
pub type XPLMCameraControlDuration = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct_Unnamed2 {
    pub x: ::std::os::raw::c_float,
    pub y: ::std::os::raw::c_float,
    pub z: ::std::os::raw::c_float,
    pub pitch: ::std::os::raw::c_float,
    pub heading: ::std::os::raw::c_float,
    pub roll: ::std::os::raw::c_float,
    pub zoom: ::std::os::raw::c_float,
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XPLMCameraPosition_t = Struct_Unnamed2;
pub type XPLMCameraControl_f =
    ::std::option::Option<unsafe extern "C" fn(outCameraPosition:
                                                   *mut XPLMCameraPosition_t,
                                               inIsLosingControl:
                                                   ::std::os::raw::c_int,
                                               inRefcon:
                                                   *mut ::std::os::raw::c_void)
                              -> ::std::os::raw::c_int>;
extern "C" {
    pub fn XPLMControlCamera(inHowLong: XPLMCameraControlDuration,
                             inControlFunc: XPLMCameraControl_f,
                             inRefcon: *mut ::std::os::raw::c_void);
    pub fn XPLMDontControlCamera();
    pub fn XPLMIsCameraBeingControlled(outCameraControlDuration:
                                           *mut XPLMCameraControlDuration)
     -> ::std::os::raw::c_int;
    pub fn XPLMReadCameraPosition(outCameraPosition:
                                      *mut XPLMCameraPosition_t);
}
