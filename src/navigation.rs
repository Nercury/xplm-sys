/* automatically generated by rust-bindgen */

pub type Enum_Unnamed1 = ::libc::c_uint;
pub const xplm_Nav_Unknown: ::libc::c_uint = 0;
pub const xplm_Nav_Airport: ::libc::c_uint = 1;
pub const xplm_Nav_NDB: ::libc::c_uint = 2;
pub const xplm_Nav_VOR: ::libc::c_uint = 4;
pub const xplm_Nav_ILS: ::libc::c_uint = 8;
pub const xplm_Nav_Localizer: ::libc::c_uint = 16;
pub const xplm_Nav_GlideSlope: ::libc::c_uint = 32;
pub const xplm_Nav_OuterMarker: ::libc::c_uint = 64;
pub const xplm_Nav_MiddleMarker: ::libc::c_uint = 128;
pub const xplm_Nav_InnerMarker: ::libc::c_uint = 256;
pub const xplm_Nav_Fix: ::libc::c_uint = 512;
pub const xplm_Nav_DME: ::libc::c_uint = 1024;
pub const xplm_Nav_LatLon: ::libc::c_uint = 2048;
pub type XPLMNavType = ::libc::c_int;
pub type XPLMNavRef = ::libc::c_int;
extern "C" {
    pub fn XPLMGetFirstNavAid() -> XPLMNavRef;
    pub fn XPLMGetNextNavAid(inNavAidRef: XPLMNavRef) -> XPLMNavRef;
    pub fn XPLMFindFirstNavAidOfType(inType: XPLMNavType) -> XPLMNavRef;
    pub fn XPLMFindLastNavAidOfType(inType: XPLMNavType) -> XPLMNavRef;
    pub fn XPLMFindNavAid(inNameFragment: *const ::libc::c_char,
                          inIDFragment: *const ::libc::c_char,
                          inLat: *mut ::libc::c_float,
                          inLon: *mut ::libc::c_float,
                          inFrequency: *mut ::libc::c_int,
                          inType: XPLMNavType) -> XPLMNavRef;
    pub fn XPLMGetNavAidInfo(inRef: XPLMNavRef, outType: *mut XPLMNavType,
                             outLatitude: *mut ::libc::c_float,
                             outLongitude: *mut ::libc::c_float,
                             outHeight: *mut ::libc::c_float,
                             outFrequency: *mut ::libc::c_int,
                             outHeading: *mut ::libc::c_float,
                             outID: *mut ::libc::c_char,
                             outName: *mut ::libc::c_char,
                             outReg: *mut ::libc::c_char) -> ();
    pub fn XPLMCountFMSEntries() -> ::libc::c_int;
    pub fn XPLMGetDisplayedFMSEntry() -> ::libc::c_int;
    pub fn XPLMGetDestinationFMSEntry() -> ::libc::c_int;
    pub fn XPLMSetDisplayedFMSEntry(inIndex: ::libc::c_int) -> ();
    pub fn XPLMSetDestinationFMSEntry(inIndex: ::libc::c_int) -> ();
    pub fn XPLMGetFMSEntryInfo(inIndex: ::libc::c_int,
                               outType: *mut XPLMNavType,
                               outID: *mut ::libc::c_char,
                               outRef: *mut XPLMNavRef,
                               outAltitude: *mut ::libc::c_int,
                               outLat: *mut ::libc::c_float,
                               outLon: *mut ::libc::c_float) -> ();
    pub fn XPLMSetFMSEntryInfo(inIndex: ::libc::c_int, inRef: XPLMNavRef,
                               inAltitude: ::libc::c_int) -> ();
    pub fn XPLMSetFMSEntryLatLon(inIndex: ::libc::c_int,
                                 inLat: ::libc::c_float,
                                 inLon: ::libc::c_float,
                                 inAltitude: ::libc::c_int) -> ();
    pub fn XPLMClearFMSEntry(inIndex: ::libc::c_int) -> ();
    pub fn XPLMGetGPSDestinationType() -> XPLMNavType;
    pub fn XPLMGetGPSDestination() -> XPLMNavRef;
}
