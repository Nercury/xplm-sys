/* automatically generated by rust-bindgen */

use defs::XPLMPluginID;

#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct_Unnamed1 {
    pub structSize: ::std::os::raw::c_int,
    pub gearPosition: ::std::os::raw::c_float,
    pub flapRatio: ::std::os::raw::c_float,
    pub spoilerRatio: ::std::os::raw::c_float,
    pub speedBrakeRatio: ::std::os::raw::c_float,
    pub slatRatio: ::std::os::raw::c_float,
    pub wingSweep: ::std::os::raw::c_float,
    pub thrust: ::std::os::raw::c_float,
    pub yokePitch: ::std::os::raw::c_float,
    pub yokeHeading: ::std::os::raw::c_float,
    pub yokeRoll: ::std::os::raw::c_float,
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type XPLMPlaneDrawState_t = Struct_Unnamed1;
pub type XPLMPlanesAvailable_f =
    ::std::option::Option<unsafe extern "C" fn(inRefcon:
                                                   *mut ::std::os::raw::c_void)>;
extern "C" {
    pub fn XPLMSetUsersAircraft(inAircraftPath:
                                    *const ::std::os::raw::c_char);
    pub fn XPLMPlaceUserAtAirport(inAirportCode:
                                      *const ::std::os::raw::c_char);
    pub fn XPLMCountAircraft(outTotalAircraft: *mut ::std::os::raw::c_int,
                             outActiveAircraft: *mut ::std::os::raw::c_int,
                             outController: *mut XPLMPluginID);
    pub fn XPLMGetNthAircraftModel(inIndex: ::std::os::raw::c_int,
                                   outFileName: *mut ::std::os::raw::c_char,
                                   outPath: *mut ::std::os::raw::c_char);
    pub fn XPLMAcquirePlanes(inAircraft: *mut *mut ::std::os::raw::c_char,
                             inCallback: XPLMPlanesAvailable_f,
                             inRefcon: *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_int;
    pub fn XPLMReleasePlanes();
    pub fn XPLMSetActiveAircraftCount(inCount: ::std::os::raw::c_int);
    pub fn XPLMSetAircraftModel(inIndex: ::std::os::raw::c_int,
                                inAircraftPath:
                                    *const ::std::os::raw::c_char);
    pub fn XPLMDisableAIForPlane(inPlaneIndex: ::std::os::raw::c_int);
    pub fn XPLMDrawAircraft(inPlaneIndex: ::std::os::raw::c_int,
                            inX: ::std::os::raw::c_float,
                            inY: ::std::os::raw::c_float,
                            inZ: ::std::os::raw::c_float,
                            inPitch: ::std::os::raw::c_float,
                            inRoll: ::std::os::raw::c_float,
                            inYaw: ::std::os::raw::c_float,
                            inFullDraw: ::std::os::raw::c_int,
                            inDrawStateInfo: *mut XPLMPlaneDrawState_t);
    pub fn XPLMReinitUsersPlane();
}
